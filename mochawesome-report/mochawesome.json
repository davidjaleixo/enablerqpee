{
  "stats": {
    "suites": 38,
    "tests": 36,
    "passes": 36,
    "pending": 0,
    "failures": 0,
    "start": "2018-10-09T16:07:20.603Z",
    "end": "2018-10-09T16:07:22.178Z",
    "duration": 1575,
    "testsRegistered": 36,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "876294a9-ecc4-49cb-948f-dc2146bd0d1a",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "5d5add19-5be1-419f-9b2b-f16cc52d9e7f",
        "title": "Quality Performance Evaluator Enabler BACKEND",
        "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
        "file": "\\test\\configTestBE.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "be352528-1c84-4b72-b292-0fd8c781f74b",
            "title": "API",
            "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
            "file": "\\test\\configTestBE.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
              {
                "uuid": "86382da1-0242-4715-a2ee-c460d097ad15",
                "title": "1. Testing Database Connection",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "Should Connect to Database without an error",
                    "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 1. Testing Database Connection Should Connect to Database without an error",
                    "timedOut": false,
                    "duration": 13,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "dbpool.getConnection(done);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6ff529eb-4896-4bac-ac1f-5cf14a1b758b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "6ff529eb-4896-4bac-ac1f-5cf14a1b758b"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 13,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "c30b250e-8233-43e9-9ac5-704a4f98e125",
                "title": "2. POST /api/vf-os-enabler/subject/create/",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "0a366f97-1c28-42e5-af77-e45f07d2b430",
                    "title": "2.1 Create new subject for an existing userID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 2. POST /api/vf-os-enabler/subject/create/ 2.1 Create new subject for an existing userID should return status code 200",
                        "timedOut": false,
                        "duration": 76,
                        "state": "passed",
                        "speed": "slow",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATESUBJECT,\n\tform:{\n\t\tname:\"TestSubjectMocha\",\n\t\tdescription: \"Same Description\",\n\t\tuserID: \"Mocha\"\n\t}\n};\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0d76c09c-a21f-4155-a34d-4741d0952ac2",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "DB should have the new subject",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 2. POST /api/vf-os-enabler/subject/create/ 2.1 Create new subject for an existing userID DB should have the new subject",
                        "timedOut": false,
                        "duration": 13,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETSUBJECT + \"Mocha\", function(error,response,body){\n\tif (error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].name, \"TestSubjectMocha\");\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "3a255836-984e-4f48-ba35-467f234702df",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "0d76c09c-a21f-4155-a34d-4741d0952ac2",
                      "3a255836-984e-4f48-ba35-467f234702df"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 89,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "93b3ed4b-755c-4f36-8497-e2bc3565f4a4",
                    "title": "2.2 Create new subject for an existing userID with same subject name",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 400",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 2. POST /api/vf-os-enabler/subject/create/ 2.2 Create new subject for an existing userID with same subject name should return status code 400",
                        "timedOut": false,
                        "duration": 13,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATESUBJECT,\n\tform:{\n\t\tname:\"TestSubjectMocha\",\n\t\tdescription: \"Same Description - New Test\",\n\t\tuserID: \"Mocha\"\n\t}\n}\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 400);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "770579d0-45a7-4cbe-b51c-ac5e121ab869",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "770579d0-45a7-4cbe-b51c-ac5e121ab869"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 13,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "d2e82e86-31f5-4add-af76-8a23b09e11f8",
                "title": "3. POST /api/vf-os-enabler/collection/create/",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "dbe940dd-d18d-4a6c-a35a-b36cbc24a0d8",
                    "title": "3.1 Create new collection for an existing subjectsID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 3. POST /api/vf-os-enabler/collection/create/ 3.1 Create new collection for an existing subjectsID should return status code 200",
                        "timedOut": false,
                        "duration": 30,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATECOLLECTION,\n\tform:{\n\t\tname:\"TestCollectionMocha\",\n\t\tsubjectsID: 39\n\t}\n};\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "28ff3b6e-50b2-45af-877a-8f3088fc2c0e",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "DB should have the new collection",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 3. POST /api/vf-os-enabler/collection/create/ 3.1 Create new collection for an existing subjectsID DB should have the new collection",
                        "timedOut": false,
                        "duration": 13,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETCOLLECTION + \"Mocha/TestSubjectMocha\", function(error,response,body){\n\tif (error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].name, \"TestCollectionMocha\");\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e7424419-9dc3-443d-8648-5cc21fc79c51",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "28ff3b6e-50b2-45af-877a-8f3088fc2c0e",
                      "e7424419-9dc3-443d-8648-5cc21fc79c51"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 43,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "75694ee8-43ec-4f32-9cb9-2fc653f24f32",
                    "title": "3.2 Create new collection for an existing subjectsID with same collection name",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 400",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 3. POST /api/vf-os-enabler/collection/create/ 3.2 Create new collection for an existing subjectsID with same collection name should return status code 400",
                        "timedOut": false,
                        "duration": 12,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATECOLLECTION,\n\tform:{\n\t\tname:\"TestCollectionMocha\",\n\t\tsubjectsID: 39\n\t}\n}\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 400);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e1a2a894-256f-4019-97f5-c06180ab79f3",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "e1a2a894-256f-4019-97f5-c06180ab79f3"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 12,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "cda8a540-2700-4798-8aa2-2b26d00572b2",
                    "title": "3.3 Create new collections with non existing subjectsID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 404",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 3. POST /api/vf-os-enabler/collection/create/ 3.3 Create new collections with non existing subjectsID should return status code 404",
                        "timedOut": false,
                        "duration": 10,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATECOLLECTION,\n\tform:{\n\t\tname:\"TestCollection\",\n\t\tsubjectsID: 100\n\t}\n}\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 404);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "51126151-095b-41cf-ac05-fd76c33e705f",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "51126151-095b-41cf-ac05-fd76c33e705f"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 10,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "88f708ac-51a4-4e55-bf74-47c25df03884",
                "title": "4. POST /api/vf-os-enabler/request/create/",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "bcfb1b91-8855-468c-993d-0a16614726f5",
                    "title": "4.1 Create new request for an existing collectionID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 4. POST /api/vf-os-enabler/request/create/ 4.1 Create new request for an existing collectionID should return status code 200",
                        "timedOut": false,
                        "duration": 29,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATEREQUEST,\n\tform:{\n\t\tcollectionid:26,\n\t\turl:\"https://mocha.free.beeceptor.com/my/api/path\",\n\t\tmethod:\"POST\",\n\t\traw:\"application/json\",\n\t\tpayload:{\"test\":\"test1\"}\n\t}\n};\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "3119206c-1855-4e77-a8b8-5415e3be4f7b",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "DB should have the new Request",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 4. POST /api/vf-os-enabler/request/create/ 4.1 Create new request for an existing collectionID DB should have the new Request",
                        "timedOut": false,
                        "duration": 19,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETREQUEST + \"Mocha/TestSubjectMocha/TestCollectionMocha\", function(error,response,body){\n\tif (error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].url, \"https://mocha.free.beeceptor.com/my/api/path\");\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].method, \"POST\");\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].raw, \"application/json\");\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].payload, '{\"test\":\"test1\"}');\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "6576763b-e567-4801-b61f-f054b307829b",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "3119206c-1855-4e77-a8b8-5415e3be4f7b",
                      "6576763b-e567-4801-b61f-f054b307829b"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 48,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "4373eedc-0816-45e3-9d46-bb8f045a23d6",
                    "title": "4.2 Create new request with non existing subjectsID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 404",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 4. POST /api/vf-os-enabler/request/create/ 4.2 Create new request with non existing subjectsID should return status code 404",
                        "timedOut": false,
                        "duration": 11,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATEREQUEST,\n\tform:{\n\t\tcollectionid:100,\n\t\turl:\"https://mocha.free.beeceptor.com/my/api/path\",\n\t\tmethod:\"POST\",\n\t\traw:\"application/json\",\n\t\tpayload:{\"test\":\"test1\"}\n\t}\n}\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 404);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "037aab88-fa14-4d3d-8c06-4d290f265e38",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "037aab88-fa14-4d3d-8c06-4d290f265e38"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 11,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "34fc1048-345e-4f15-b9e5-c3843a4726f0",
                "title": "5. POST /api/vf-os-enabler/condition/create/",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "7e0b1992-dac9-47cf-b340-f05dba7e607f",
                    "title": "5.1 Create new condition for an existing requestID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 5. POST /api/vf-os-enabler/condition/create/ 5.1 Create new condition for an existing requestID should return status code 200",
                        "timedOut": false,
                        "duration": 29,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATECONDITION,\n\tform:{\n\t\tdescription:\"TestConditionMocha\",\n\t\tkeySubject:\"StatusCode\",\n\t\tkeyCondition: \">\",\n\t\tvalue:\"100\",\n\t\trequestID:50\n\t}\n};\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "c9d60425-8221-46a0-bd39-0880849580ac",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "DB should have the new Condition",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 5. POST /api/vf-os-enabler/condition/create/ 5.1 Create new condition for an existing requestID DB should have the new Condition",
                        "timedOut": false,
                        "duration": 12,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETCONDITION + \"50\", function(error,response,body){\n\tif (error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].description, \"TestConditionMocha\");\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].keySubject, \"StatusCode\");\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].keyCondition, \">\");\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].value, \"100\");\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "507c72ed-4acb-4221-b87d-4cc75697742d",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "c9d60425-8221-46a0-bd39-0880849580ac",
                      "507c72ed-4acb-4221-b87d-4cc75697742d"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 41,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "09d0bb4c-a354-4dd2-af9d-3786363641e2",
                    "title": "5.2 Create new condition with non existing requestID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 404",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 5. POST /api/vf-os-enabler/condition/create/ 5.2 Create new condition with non existing requestID should return status code 404",
                        "timedOut": false,
                        "duration": 9,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATECONDITION,\n\tform:{\n\t\tdescription:\"TestConditionMocha - New Test\",\n\t\tkeySubject:\"StatusCode\",\n\t\tkeyCondition: \">\",\n\t\tvalue:\"100\",\n\t\trequestID:100\n\t}\n}\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 404);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "82525356-5f26-48a9-83c5-1f72d77beca9",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "82525356-5f26-48a9-83c5-1f72d77beca9"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 9,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "e4320ffa-584c-40a1-a0c6-dcc6a83aa777",
                "title": "6. POST /api/vf-os-enabler/activity/create/",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "6df71c69-afa2-4da9-b758-c91eb21cfd30",
                    "title": "6.1 Create new activity for an existing requestID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 6. POST /api/vf-os-enabler/activity/create/ 6.1 Create new activity for an existing requestID should return status code 200",
                        "timedOut": false,
                        "duration": 26,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATEACTIVITY,\n\tform:{\n\t\tcount:2,\n\t\trequestID:50\n\t}\n};\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d27c7094-8730-4cdd-8cf8-7b59c8e019bd",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "DB should have the new Activity",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 6. POST /api/vf-os-enabler/activity/create/ 6.1 Create new activity for an existing requestID DB should have the new Activity",
                        "timedOut": false,
                        "duration": 22,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETACTIVITY + \"Mocha/TestSubjectMocha/TestCollectionMocha\", function(error,response,body){\n\tif (error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].count, 2);\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].requestID, 50);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "e5212328-835b-4f55-b973-9a90a25de386",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "d27c7094-8730-4cdd-8cf8-7b59c8e019bd",
                      "e5212328-835b-4f55-b973-9a90a25de386"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 48,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "a88a70ab-ddf3-4d61-9da7-bb5c1a00ed1f",
                    "title": "6.2 Create new activity with non existing requestID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 404",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 6. POST /api/vf-os-enabler/activity/create/ 6.2 Create new activity with non existing requestID should return status code 404",
                        "timedOut": false,
                        "duration": 10,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATEACTIVITY,\n\tform:{\n\t\tcount:2,\n\t\trequestID:100\n\t}\n}\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 404);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0181d0a8-beef-4f37-b1f4-446d096efc9e",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "0181d0a8-beef-4f37-b1f4-446d096efc9e"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 10,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "5e144402-538d-4785-a030-3dc28e2c0a9c",
                "title": "7. POST /api/vf-os-enabler/performance/",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "5059d31b-695f-45b2-ae35-bd9f6aa2168b",
                    "title": "7.1 Create new performance test",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 7. POST /api/vf-os-enabler/performance/ 7.1 Create new performance test should return status code 200",
                        "timedOut": false,
                        "duration": 669,
                        "state": "passed",
                        "speed": "slow",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "var post_data = {\n\turl: base_url + constants.ROUTES.POST.CREATEPERFORMANCE + \"Mocha/TestSubjectMocha/TestCollectionMocha\",\n\tform:{\n\t}\n}\nrequest.post(post_data, function(error, response, body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a69bfcc7-4bbb-4b6b-abf6-05b0d12a44e8",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "DB should have the new Performance Test",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 7. POST /api/vf-os-enabler/performance/ 7.1 Create new performance test DB should have the new Performance Test",
                        "timedOut": false,
                        "duration": 61,
                        "state": "passed",
                        "speed": "medium",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETACTIVITY + \"Mocha/TestSubjectMocha/TestCollectionMocha\", function(error,response,body){\n\tif (error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(JSON.parse(body).data[JSON.parse(body).data.length - 1].result, \"Success\");\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a3bd3f17-1d1b-4020-91a7-6512c7741178",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "a69bfcc7-4bbb-4b6b-abf6-05b0d12a44e8",
                      "a3bd3f17-1d1b-4020-91a7-6512c7741178"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 730,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "96c43be4-7974-40f5-bc27-38e4672acd07",
                "title": "8. GET /api/vf-os-enabler/subject/get/Mocha",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "43158eaa-e85c-4555-9947-235d6c771954",
                    "title": "8.1 Query all Subjects for existing userID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 8. GET /api/vf-os-enabler/subject/get/Mocha 8.1 Query all Subjects for existing userID should return status code 200",
                        "timedOut": false,
                        "duration": 21,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url +constants.ROUTES.GET.GETSUBJECT + \"Mocha\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "c9b8ec64-1883-4d26-a6d9-8f0370dfac33",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "should return response body with Result true",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 8. GET /api/vf-os-enabler/subject/get/Mocha 8.1 Query all Subjects for existing userID should return response body with Result true",
                        "timedOut": false,
                        "duration": 20,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETSUBJECT + \"Mocha\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\texpect(JSON.parse(body)).to.have.property('Result', true);\n\tassert.equal(JSON.parse(body).Result, true);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "47dc248c-c765-4c00-b5a9-35904b0942cd",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "c9b8ec64-1883-4d26-a6d9-8f0370dfac33",
                      "47dc248c-c765-4c00-b5a9-35904b0942cd"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 41,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "88c191f9-4504-4ede-ba90-a7914ed51467",
                "title": "9. GET /api/vf-os-enabler/collection/get/Mocha/TestSubjectMocha",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "540d226d-39ce-43c5-9cc6-3905f34af9a3",
                    "title": "9.1 Query all Collections for non-existing subjectName",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 404",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 9. GET /api/vf-os-enabler/collection/get/Mocha/TestSubjectMocha 9.1 Query all Collections for non-existing subjectName should return status code 404",
                        "timedOut": false,
                        "duration": 9,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETCOLLECTION + \"Mocha/SubjectNotExisting\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 404);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "a5345803-d263-4421-9b1b-2b5674576162",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "a5345803-d263-4421-9b1b-2b5674576162"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 9,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "85196ec9-b91f-47b1-b4e8-19a26582c2af",
                    "title": "9.2 Query all Collections for existing userID and subjectName",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 9. GET /api/vf-os-enabler/collection/get/Mocha/TestSubjectMocha 9.2 Query all Collections for existing userID and subjectName should return status code 200",
                        "timedOut": false,
                        "duration": 14,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETCOLLECTION + \"Mocha/TestSubjectMocha\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "175edc71-45ab-47db-be89-d3c912bb12b1",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "should return response body with Result true",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 9. GET /api/vf-os-enabler/collection/get/Mocha/TestSubjectMocha 9.2 Query all Collections for existing userID and subjectName should return response body with Result true",
                        "timedOut": false,
                        "duration": 17,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETCOLLECTION + \"Mocha/TestSubjectMocha\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\texpect(JSON.parse(body)).to.have.property('Result', true);\n\tassert.equal(JSON.parse(body).Result, true);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ec900885-4c48-4685-8f1a-91054b7ebb64",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "175edc71-45ab-47db-be89-d3c912bb12b1",
                      "ec900885-4c48-4685-8f1a-91054b7ebb64"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 31,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "74fb2186-d839-41a0-a7ba-0b605eeb6906",
                "title": "10. GET /api/vf-os-enabler/request/get/Mocha/TestSubjectMocha/TestCollectionMocha",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "dcb30d9a-4bb4-4e9e-8a6d-f3c2d7800b4e",
                    "title": "10.1 Query all Requests for non-existing collectionsName",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 404",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 10. GET /api/vf-os-enabler/request/get/Mocha/TestSubjectMocha/TestCollectionMocha 10.1 Query all Requests for non-existing collectionsName should return status code 404",
                        "timedOut": false,
                        "duration": 15,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETREQUEST + \"Mocha/TestSubjectMocha/CollectionNotExisting\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 404);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "ebe01f6c-9cf8-417e-a9a6-210c092e42c5",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "ebe01f6c-9cf8-417e-a9a6-210c092e42c5"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 15,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "9a1117d5-113d-4d05-a927-51fb31a025ce",
                    "title": "10.2 Query all Request for existing userID, subjectName and collectionName",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 10. GET /api/vf-os-enabler/request/get/Mocha/TestSubjectMocha/TestCollectionMocha 10.2 Query all Request for existing userID, subjectName and collectionName should return status code 200",
                        "timedOut": false,
                        "duration": 19,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETREQUEST + \"Mocha/TestSubjectMocha/TestCollectionMocha\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d9cec57d-ae6e-483b-b50d-6b6b465db245",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "should return response body with Result true",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 10. GET /api/vf-os-enabler/request/get/Mocha/TestSubjectMocha/TestCollectionMocha 10.2 Query all Request for existing userID, subjectName and collectionName should return response body with Result true",
                        "timedOut": false,
                        "duration": 19,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETREQUEST + \"Mocha/TestSubjectMocha/TestCollectionMocha\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\texpect(JSON.parse(body)).to.have.property('Result', true);\n\tassert.equal(JSON.parse(body).Result, true);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "1983c996-8b38-4024-a583-78a0e64f0d4c",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "d9cec57d-ae6e-483b-b50d-6b6b465db245",
                      "1983c996-8b38-4024-a583-78a0e64f0d4c"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 38,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "afd43d82-0604-421e-9f5e-85ad3b70a7b1",
                "title": "11. GET /api/vf-os-enabler/condition/get/50",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "5df140b7-d6af-4fc5-9daf-152490e2cc41",
                    "title": "11.1 Query all Conditions for non-existing requestID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 404",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 11. GET /api/vf-os-enabler/condition/get/50 11.1 Query all Conditions for non-existing requestID should return status code 404",
                        "timedOut": false,
                        "duration": 13,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETCONDITION + \"100\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 404);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "3f286679-868d-44f7-9689-5c8e675f9c2f",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "3f286679-868d-44f7-9689-5c8e675f9c2f"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 13,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "d070e7e0-60d3-408a-9a2e-30ec39453024",
                    "title": "11.2 Query all Conditions for existing requestID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 11. GET /api/vf-os-enabler/condition/get/50 11.2 Query all Conditions for existing requestID should return status code 200",
                        "timedOut": false,
                        "duration": 16,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETCONDITION + \"50\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "075771f9-3a37-4124-83cd-ec37f7a56643",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "should return response body with Result true",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 11. GET /api/vf-os-enabler/condition/get/50 11.2 Query all Conditions for existing requestID should return response body with Result true",
                        "timedOut": false,
                        "duration": 15,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETCONDITION + \"50\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\texpect(JSON.parse(body)).to.have.property('Result', true);\n\tassert.equal(JSON.parse(body).Result, true);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0060884e-21cd-4183-9919-912ba8f3aa91",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "075771f9-3a37-4124-83cd-ec37f7a56643",
                      "0060884e-21cd-4183-9919-912ba8f3aa91"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 31,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "be5007ce-d8ac-4322-b3f6-861f5c440b30",
                "title": "12. GET /api/vf-os-enabler/activity/get/Mocha/TestSubjectMocha/TestCollectionMocha",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "bba256e5-b348-4e00-9ce4-45a47b16b0b6",
                    "title": "12.1 Query all Activities for non-existing collectionsName",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 404",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 12. GET /api/vf-os-enabler/activity/get/Mocha/TestSubjectMocha/TestCollectionMocha 12.1 Query all Activities for non-existing collectionsName should return status code 404",
                        "timedOut": false,
                        "duration": 17,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETACTIVITY + \"Mocha/TestSubjectMocha/CollectionNotExisting\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 404);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "24c2d417-8218-4156-8d14-390107f5a2ce",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "24c2d417-8218-4156-8d14-390107f5a2ce"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 17,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "69b189e4-0dad-4f14-b7b9-5a3504f3ea0b",
                    "title": "12.2 Query all Activities for existing userID, subjectName and collectionName",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 12. GET /api/vf-os-enabler/activity/get/Mocha/TestSubjectMocha/TestCollectionMocha 12.2 Query all Activities for existing userID, subjectName and collectionName should return status code 200",
                        "timedOut": false,
                        "duration": 33,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETACTIVITY + \"Mocha/TestSubjectMocha/TestCollectionMocha\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "9bd06588-a8ee-47d6-af3f-d8adb475cd67",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "should return response body with Result true",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 12. GET /api/vf-os-enabler/activity/get/Mocha/TestSubjectMocha/TestCollectionMocha 12.2 Query all Activities for existing userID, subjectName and collectionName should return response body with Result true",
                        "timedOut": false,
                        "duration": 30,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETACTIVITY + \"Mocha/TestSubjectMocha/TestCollectionMocha\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\texpect(JSON.parse(body)).to.have.property('Result', true);\n\tassert.equal(JSON.parse(body).Result, true);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "d5ad3c50-09bb-41d9-bb98-f210efdf21dc",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "9bd06588-a8ee-47d6-af3f-d8adb475cd67",
                      "d5ad3c50-09bb-41d9-bb98-f210efdf21dc"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 63,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "4971e7d7-73dc-4c27-845f-08d353f5738f",
                "title": "13. GET /api/vf-os-enabler/statuslist/get/36",
                "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                "file": "\\test\\configTestBE.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "f756876b-52eb-4040-95ca-f276a7be49a5",
                    "title": "13.1 Query all StatusList for non-existing activityID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 404",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 13. GET /api/vf-os-enabler/statuslist/get/36 13.1 Query all StatusList for non-existing activityID should return status code 404",
                        "timedOut": false,
                        "duration": 7,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETSTATUSLIST + \"100\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 404);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "db49d0ef-491d-4f98-a70a-6a11443d3637",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "db49d0ef-491d-4f98-a70a-6a11443d3637"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 7,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  },
                  {
                    "uuid": "bf0f9ec6-f501-4158-b79d-8e376a2f7dac",
                    "title": "13.2 Query all StatusList for existing activityID",
                    "fullFile": "C:\\Users\\user\\Desktop\\Enablers\\qpeeenabler\\test\\configTestBE.js",
                    "file": "\\test\\configTestBE.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [
                      {
                        "title": "should return status code 200",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 13. GET /api/vf-os-enabler/statuslist/get/36 13.2 Query all StatusList for existing activityID should return status code 200",
                        "timedOut": false,
                        "duration": 20,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETSTATUSLIST + \"36\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\tassert.equal(response.statusCode, 200);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "24c3a372-5d02-4415-8409-1e4230413fe3",
                        "isHook": false,
                        "skipped": false
                      },
                      {
                        "title": "should return response body with Result true",
                        "fullTitle": "Quality Performance Evaluator Enabler BACKEND API 13. GET /api/vf-os-enabler/statuslist/get/36 13.2 Query all StatusList for existing activityID should return response body with Result true",
                        "timedOut": false,
                        "duration": 20,
                        "state": "passed",
                        "speed": "fast",
                        "pass": true,
                        "fail": false,
                        "pending": false,
                        "code": "request.get(base_url + constants.ROUTES.GET.GETSTATUSLIST + \"36\", function(error,response,body){\n\tif(error){\n\t\tdone(error);\n\t\treturn;\n\t}\n\texpect(JSON.parse(body)).to.have.property('Result', true);\n\tassert.equal(JSON.parse(body).Result, true);\n\tdone();\n})",
                        "err": {},
                        "isRoot": false,
                        "uuid": "0efe34c4-1dd6-4095-8f5b-b9e67e346a44",
                        "isHook": false,
                        "skipped": false
                      }
                    ],
                    "suites": [],
                    "passes": [
                      "24c3a372-5d02-4415-8409-1e4230413fe3",
                      "0efe34c4-1dd6-4095-8f5b-b9e67e346a44"
                    ],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 40,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}